{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport { defineComponent } from 'vue';\nexport default /*#__PURE__*/defineComponent({\n  name: 'autocomplete',\n  emits: ['update:modelValue'],\n  props: {\n    minWords: {\n      type: Number,\n      \"default\": 0\n    },\n    placeholder: {\n      type: [String, Number]\n    },\n    aviableSpace: {\n      type: Boolean,\n      \"default\": true\n    },\n    list: {\n      type: Array,\n      \"default\": function _default() {\n        return [];\n      }\n    },\n    modelValue: {\n      type: [Array, String, Number],\n      \"default\": function _default() {\n        return [];\n      }\n    }\n  },\n  mounted: function mounted() {},\n  data: function data() {\n    return {\n      inputData: null\n    };\n  },\n  methods: {\n    goType: function goType(e) {\n      if (e.data === \",\" || this.inputData && this.inputData.includes(\",\")) {\n        if (!this.modelValue) {\n          this.$emit('update:modelValue', [this.inputData]);\n        } else {\n          this.modelValue.push(this.inputData), this.$emit('update:modelValue', this.inputData);\n        }\n      }\n    }\n  },\n  computed: {}\n});","map":{"version":3,"names":["defineComponent","name","emits","props","minWords","type","Number","placeholder","String","aviableSpace","Boolean","list","Array","_default","modelValue","mounted","data","inputData","methods","goType","e","includes","$emit","push","computed"],"sources":["/Users/venegrad/Projects/@venegrad/autocomplete/src/ven-autocomplete.vue"],"sourcesContent":["<template>\n\t<div class=\"ven-autocomplete\">\n\t\t<div class=\"ven-autocomplete__input\">\n\t\t\t<div class=\"ven-autocomplete__selected\" v-for=\"(item, ind) in modelValue\" :key=\"'vv'+ind\">\n\t\t\t\t{{  item  }}\n\t\t\t</div>\n\t\t\t<input\n\t\t\t\tref=\"venAutocomplete\"\n\t\t\t\tv-model=\"inputData\"\n\t\t\t\tautocomplete=\"off\"\n\t\t\t\t:placeholder=\"placeholder\"\n\t\t\t\ttype=\"text\"\n\t\t\t\t@input=\"goType\"\n\t\t\t\tclass=\"ven-autocomplete__field\"\n\t\t\t/>\n\t\t</div>\n\t\t<div class=\"ven-autocomplete__dropdown\">\n\n\t\t</div>\n\t</div>\n</template>\n\n\t<!-- \n\t\t:placeholder=\"placeholder\"\n\t\tv-model=\"input\"\n\t\t@input=\"onInput\"\n\t\t@focus=\"onFocus\"\n\t\t@blur=\"onBlur\"\n\t\t@keydown.down.prevent=\"onArrowDown\"\n\t\t@keydown.up.prevent=\"onArrowUp\"\n\t\t@keydown.enter.prevent=\"selectCurrentSelection\"\n\t\t@keydown.tab.prevent=\"selectCurrentSelectionTab\" \n\t-->\n\n<script>\n\timport { defineComponent } from 'vue';\n\n\texport default /*#__PURE__*/ defineComponent({\n\t\tname: 'autocomplete',\n\t\temits: ['update:modelValue'],\n\t\tprops: {\n\t\t\tminWords: {\n\t\t\t\ttype: Number,\n\t\t\t\tdefault: 0\n\t\t\t},\n\t\t\tplaceholder: {\n\t\t\t\ttype: [String, Number]\n\t\t\t},\n\t\t\taviableSpace: {\n\t\t\t\ttype: Boolean,\n\t\t\t\tdefault: true\n\t\t\t},\n\t\t\tlist: {\n\t\t\t\ttype: Array,\n\t\t\t\tdefault: () => []\n\t\t\t},\n\t\t\tmodelValue: {\n\t\t\t\ttype: [Array, String, Number],\n\t\t\t\tdefault: () => []\n\t\t\t}\n\t\t},\n\t\tmounted() {\n\t\t\t\n\t\t},\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\tinputData: null\n\t\t\t};\n\t\t},\n\t\tmethods: {\n\t\t\tgoType(e) {\n\t\t\t\tif(e.data === \",\" || (this.inputData && this.inputData.includes(\",\"))) {\n\t\t\t\t\tif(!this.modelValue) {\n\t\t\t\t\t\tthis.$emit('update:modelValue', [this.inputData])\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.modelValue.push(this.inputData),\n\t\t\t\t\t\tthis.$emit('update:modelValue', this.inputData)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tcomputed: {\n\t\t\t\n\t\t},\n\t});\n</script>\n\n<style scoped>\n.ven-autocomplete {\n\tposition: relative;\n\twidth: 100%;\n\tbox-sizing: border-box;\n\tfont-family: 'Tahoma';\n}\n\n.ven-autocomplete * {\n\tbox-sizing: border-box;\n}\n\n.ven-autocomplete__input {\n\tdisplay: flex;\n\tflex-wrap: wrap;\n\tborder: 2px solid rgba(255,255,255,0.2);\n\tmin-height: 50px; \n\tpadding: 6px;\n\tborder-radius: 12px;\n}\n\n.ven-autocomplete__field {\n\twidth: auto;\n\tflex-grow: 1;\n\tappearance: none;\n\tborder: 0;\n\tbackground: transparent;\n\toutline: none;\n\tfont-size: 16px;\n\tfont-family: inherit;\n\tfont-weight: 500;\n\tcolor: #fff;\n}\n</style>\n"],"mappings":";;;;AAmCC,SAASA,eAAc,QAAS,KAAK;AAErC,eAAe,aAAcA,eAAe,CAAC;EAC5CC,IAAI,EAAE,cAAc;EACpBC,KAAK,EAAE,CAAC,mBAAmB,CAAC;EAC5BC,KAAK,EAAE;IACNC,QAAQ,EAAE;MACTC,IAAI,EAAEC,MAAM;MACZ,WAAS;IACV,CAAC;IACDC,WAAW,EAAE;MACZF,IAAI,EAAE,CAACG,MAAM,EAAEF,MAAM;IACtB,CAAC;IACDG,YAAY,EAAE;MACbJ,IAAI,EAAEK,OAAO;MACb,WAAS;IACV,CAAC;IACDC,IAAI,EAAE;MACLN,IAAI,EAAEO,KAAK;MACX,WAAS,SAAAC,SAAA;QAAA,OAAM,EAAC;MAAA;IACjB,CAAC;IACDC,UAAU,EAAE;MACXT,IAAI,EAAE,CAACO,KAAK,EAAEJ,MAAM,EAAEF,MAAM,CAAC;MAC7B,WAAS,SAAAO,SAAA;QAAA,OAAM,EAAC;MAAA;IACjB;EACD,CAAC;EACDE,OAAO,WAAAA,QAAA,EAAG,CAEV,CAAC;EACDC,IAAI,WAAAA,KAAA,EAAG;IACN,OAAO;MACNC,SAAS,EAAE;IACZ,CAAC;EACF,CAAC;EACDC,OAAO,EAAE;IACRC,MAAM,WAAAA,OAACC,CAAC,EAAE;MACT,IAAGA,CAAC,CAACJ,IAAG,KAAM,GAAE,IAAM,IAAI,CAACC,SAAQ,IAAK,IAAI,CAACA,SAAS,CAACI,QAAQ,CAAC,GAAG,CAAE,EAAE;QACtE,IAAG,CAAC,IAAI,CAACP,UAAU,EAAE;UACpB,IAAI,CAACQ,KAAK,CAAC,mBAAmB,EAAE,CAAC,IAAI,CAACL,SAAS,CAAC;QACjD,OAAO;UACN,IAAI,CAACH,UAAU,CAACS,IAAI,CAAC,IAAI,CAACN,SAAS,CAAC,EACpC,IAAI,CAACK,KAAK,CAAC,mBAAmB,EAAE,IAAI,CAACL,SAAS;QAC/C;MACD;IACD;EACD,CAAC;EACDO,QAAQ,EAAE,CAEV;AACD,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}